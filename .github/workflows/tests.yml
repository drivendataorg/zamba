name: tests

on:
  push:
    branches: [ master ]
  pull_request:
  schedule:
    # Run every Sunday
    - cron: '0 0 * * 0'

jobs:
  build:
    name: ${{ matrix.os }}, Python ${{ matrix.python-version }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.6, 3.7]

    steps:

    - uses: actions/checkout@v2

    - name: Set up Python ${{ matrix.python-version }} with Miniconda
      uses: conda-incubator/setup-miniconda@v2.0.0
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}

    - name: Get pip cache dir
      id: pip-cache
      shell: bash -l {0}
      run: |
        echo "::set-output name=dir::$(python -m pip cache dir)"
      
    - name: Load pip cache
      uses: actions/cache@v2
      with:
        path: ${{ steps.pip-cache.outputs.dir }}
        key: ${{ matrix.os }}-${{ matrix.python-version }}-pip-${{ hashFiles('**/requirements*.txt') }}
        restore-keys: |
          ${{ matrix.os }}-${{ matrix.python-version }}-pip-

    - name: Install ffmpeg
      shell: bash -l {0}
      run: |
        conda install -y ffmpeg

    - name: Install dependencies
      shell: bash -l {0}
      run: |
        pip install Cython==0.28.1 --install-option="--no-cython-compile"
        make reqs

    - name: Lint Package
      shell: bash -l {0}
      run: |
        make lint

    - name: Test Package
      shell: bash -l {0}
      run: |
        make test

    - name: Test Build Docs
      shell: bash -l {0}
      run: |
        make docs
